/*! jQuery Migrate v1.2.1 | (c) 2005, 2015 jQuery Foundation, Inc. and other contributors | jquery.org/license */ jQuery.migrateMute === void 0 && (jQuery.migrateMute = true), (function(e, t, n1) {
    function r(n1) {
        var r1 = t.console;
        i[n1] || (i[n1] = true, e.migrateWarnings.push(n1), r1 && r1.warn && !e.migrateMute && (r1.warn("JQMIGRATE: " + n1), e.migrateTrace && r1.trace && r1.trace()));
    }
    function a(t1, a1, i, o) {
        if (Object.defineProperty) try {
            return Object.defineProperty(t1, a1, {
                configurable: true,
                enumerable: true,
                get: function() {
                    return r(o), i;
                },
                set: function(e1) {
                    r(o), i = e1;
                }
            }), n1;
        } catch (s) {
        }
        e._definePropertyBroken = true, t1[a1] = i;
    }
    var i = {
    };
    e.migrateWarnings = [], !e.migrateMute && t.console && t.console.log && t.console.log("JQMIGRATE: Logging is active"), e.migrateTrace === n1 && (e.migrateTrace = true), e.migrateReset = function() {
        i = {
        }, e.migrateWarnings.length = 0;
    }, "BackCompat" === document.compatMode && r("jQuery is not compatible with Quirks Mode");
    var o = e("<input/>", {
        size: 1
    }).attr("size") && e.attrFn, s = e.attr, u = e.attrHooks.value && e.attrHooks.value.get || function() {
        return null;
    }, c = e.attrHooks.value && e.attrHooks.value.set || function() {
        return n1;
    }, l = /^(?:input|button)$/i, d = /^[238]$/, p = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i, f = /^(?:checked|selected)$/i;
    a(e, "attrFn", o || {
    }, "jQuery.attrFn is deprecated"), e.attr = function(t1, a1, i1, u1) {
        var c1 = a1.toLowerCase(), g = t1 && t1.nodeType;
        return u1 && (4 > s.length && r("jQuery.fn.attr( props, pass ) is deprecated"), t1 && !d.test(g) && (o ? a1 in o : e.isFunction(e.fn[a1]))) ? e(t1)[a1](i1) : ("type" === a1 && i1 !== n1 && l.test(t1.nodeName) && t1.parentNode && r("Can't change the 'type' of an input or button in IE 6/7/8"), !e.attrHooks[c1] && p.test(c1) && (e.attrHooks[c1] = {
            get: function(t2, r1) {
                var a2, i2 = e.prop(t2, r1);
                return i2 === true || "boolean" != typeof i2 && (a2 = t2.getAttributeNode(r1)) && a2.nodeValue !== false ? r1.toLowerCase() : n1;
            },
            set: function(t2, n1, r1) {
                var a2;
                return n1 === false ? e.removeAttr(t2, r1) : (a2 = e.propFix[r1] || r1, a2 in t2 && (t2[a2] = true), t2.setAttribute(r1, r1.toLowerCase())), r1;
            }
        }, f.test(c1) && r("jQuery.fn.attr('" + c1 + "') may use property instead of attribute")), s.call(e, t1, a1, i1));
    }, e.attrHooks.value = {
        get: function(e1, t1) {
            var n1 = (e1.nodeName || "").toLowerCase();
            return "button" === n1 ? u.apply(this, arguments) : ("input" !== n1 && "option" !== n1 && r("jQuery.fn.attr('value') no longer gets properties"), t1 in e1 ? e1.value : null);
        },
        set: function(e1, t1) {
            var a1 = (e1.nodeName || "").toLowerCase();
            return "button" === a1 ? c.apply(this, arguments) : ("input" !== a1 && "option" !== a1 && r("jQuery.fn.attr('value', val) no longer sets properties"), e1.value = t1, n1);
        }
    };
    var g, h, v = e.fn.init, m = e.parseJSON, y = /^([^<]*)(<[\w\W]+>)([^>]*)$/;
    e.fn.init = function(t1, n1, a1) {
        var i1;
        return t1 && "string" == typeof t1 && !e.isPlainObject(n1) && (i1 = y.exec(e.trim(t1))) && i1[0] && ("<" !== t1.charAt(0) && r("$(html) HTML strings must start with '<' character"), i1[3] && r("$(html) HTML text after last tag is ignored"), "#" === i1[0].charAt(0) && (r("HTML string cannot start with a '#' character"), e.error("JQMIGRATE: Invalid selector string (XSS)")), n1 && n1.context && (n1 = n1.context), e.parseHTML) ? v.call(this, e.parseHTML(i1[2], n1, true), n1, a1) : v.apply(this, arguments);
    }, e.fn.init.prototype = e.fn, e.parseJSON = function(e1) {
        return e1 || null === e1 ? m.apply(this, arguments) : (r("jQuery.parseJSON requires a valid JSON string"), null);
    }, e.uaMatch = function(e1) {
        e1 = e1.toLowerCase();
        var t1 = /(chrome)[ \/]([\w.]+)/.exec(e1) || /(webkit)[ \/]([\w.]+)/.exec(e1) || /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(e1) || /(msie) ([\w.]+)/.exec(e1) || 0 > e1.indexOf("compatible") && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(e1) || [];
        return {
            browser: t1[1] || "",
            version: t1[2] || "0"
        };
    }, e.browser || (g = e.uaMatch(navigator.userAgent), h = {
    }, g.browser && (h[g.browser] = true, h.version = g.version), h.chrome ? h.webkit = true : h.webkit && (h.safari = true), e.browser = h), a(e, "browser", e.browser, "jQuery.browser is deprecated"), e.sub = function() {
        function t1(e1, n1) {
            return new t1.fn.init(e1, n1);
        }
        e.extend(true, t1, this), t1.superclass = this, t1.fn = t1.prototype = this(), t1.fn.constructor = t1, t1.sub = this.sub, t1.fn.init = function(r1, a1) {
            return a1 && a1 instanceof e && !(a1 instanceof t1) && (a1 = t1(a1)), e.fn.init.call(this, r1, a1, n2);
        }, t1.fn.init.prototype = t1.fn;
        var n2 = t1(document);
        return r("jQuery.sub() is deprecated"), t1;
    }, e.ajaxSetup({
        converters: {
            "text json": e.parseJSON
        }
    });
    var b = e.fn.data;
    e.fn.data = function(t1) {
        var a1, i1, o1 = this[0];
        return !o1 || "events" !== t1 || 1 !== arguments.length || (a1 = e.data(o1, t1), i1 = e._data(o1, t1), a1 !== n1 && a1 !== i1 || i1 === n1) ? b.apply(this, arguments) : (r("Use of jQuery.fn.data('events') is deprecated"), i1);
    };
    var j = /\/(java|ecma)script/i, w = e.fn.andSelf || e.fn.addBack;
    e.fn.andSelf = function() {
        return r("jQuery.fn.andSelf() replaced by jQuery.fn.addBack()"), w.apply(this, arguments);
    }, e.clean || (e.clean = function(t1, a1, i1, o1) {
        a1 = a1 || document, a1 = !a1.nodeType && a1[0] || a1, a1 = a1.ownerDocument || a1, r("jQuery.clean() is deprecated");
        var s1, u1, c1, l1, d1 = [];
        if (e.merge(d1, e.buildFragment(t1, a1).childNodes), i1) for(c1 = function(e1) {
            return !e1.type || j.test(e1.type) ? o1 ? o1.push(e1.parentNode ? e1.parentNode.removeChild(e1) : e1) : i1.appendChild(e1) : n1;
        }, s1 = 0; null != (u1 = d1[s1]); s1++)e.nodeName(u1, "script") && c1(u1) || (i1.appendChild(u1), u1.getElementsByTagName !== n1 && (l1 = e.grep(e.merge([], u1.getElementsByTagName("script")), c1), d1.splice.apply(d1, [
            s1 + 1,
            0
        ].concat(l1)), s1 += l1.length));
        return d1;
    });
    var Q = e.event.add, x = e.event.remove, k = e.event.trigger, N = e.fn.toggle, T = e.fn.live, M = e.fn.die, S = "ajaxStart|ajaxStop|ajaxSend|ajaxComplete|ajaxError|ajaxSuccess", C = RegExp("\\b(?:" + S + ")\\b"), H = /(?:^|\s)hover(\.\S+|)\b/, A = function(t1) {
        return "string" != typeof t1 || e.event.special.hover ? t1 : (H.test(t1) && r("'hover' pseudo-event is deprecated, use 'mouseenter mouseleave'"), t1 && t1.replace(H, "mouseenter$1 mouseleave$1"));
    };
    e.event.props && "attrChange" !== e.event.props[0] && e.event.props.unshift("attrChange", "attrName", "relatedNode", "srcElement"), e.event.dispatch && a(e.event, "handle", e.event.dispatch, "jQuery.event.handle is undocumented and deprecated"), e.event.add = function(e1, t1, n2, a1, i1) {
        e1 !== document && C.test(t1) && r("AJAX events should be attached to document: " + t1), Q.call(this, e1, A(t1 || ""), n2, a1, i1);
    }, e.event.remove = function(e1, t1, n2, r1, a1) {
        x.call(this, e1, A(t1) || "", n2, r1, a1);
    }, e.fn.error = function() {
        var e1 = Array.prototype.slice.call(arguments, 0);
        return r("jQuery.fn.error() is deprecated"), e1.splice(0, 0, "error"), arguments.length ? this.bind.apply(this, e1) : (this.triggerHandler.apply(this, e1), this);
    }, e.fn.toggle = function(t1, n2) {
        if (!e.isFunction(t1) || !e.isFunction(n2)) return N.apply(this, arguments);
        r("jQuery.fn.toggle(handler, handler...) is deprecated");
        var a1 = arguments, i1 = t1.guid || e.guid++, o1 = 0, s1 = function(n3) {
            var r1 = (e._data(this, "lastToggle" + t1.guid) || 0) % o1;
            return e._data(this, "lastToggle" + t1.guid, r1 + 1), n3.preventDefault(), a1[r1].apply(this, arguments) || false;
        };
        for(s1.guid = i1; a1.length > o1;)a1[o1++].guid = i1;
        return this.click(s1);
    }, e.fn.live = function(t1, n2, a1) {
        return r("jQuery.fn.live() is deprecated"), T ? T.apply(this, arguments) : (e(this.context).on(t1, this.selector, n2, a1), this);
    }, e.fn.die = function(t1, n2) {
        return r("jQuery.fn.die() is deprecated"), M ? M.apply(this, arguments) : (e(this.context).off(t1, this.selector || "**", n2), this);
    }, e.event.trigger = function(e1, t1, n2, a1) {
        return n2 || C.test(e1) || r("Global events are undocumented and deprecated"), k.call(this, e1, t1, n2 || document, a1);
    }, e.each(S.split("|"), function(t1, n2) {
        e.event.special[n2] = {
            setup: function() {
                var t2 = this;
                return t2 !== document && (e.event.add(document, n2 + "." + e.guid, function() {
                    e.event.trigger(n2, null, t2, true);
                }), e._data(this, n2, e.guid++)), false;
            },
            teardown: function() {
                return this !== document && e.event.remove(document, n2 + "." + e._data(this, n2)), false;
            }
        };
    });
})(jQuery, window);
